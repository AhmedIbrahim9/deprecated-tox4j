language: scala
sudo: false

addons:
  apt:
    sources: ['ubuntu-toolchain-r-test','llvm-toolchain-precise-3.5']
    packages: ['clang-3.5', 'p7zip-full']

cache:
  directories:
    - $HOME/cache

env:
  matrix:
    - TARGET=x86_64-linux
    - TARGET=aarch64-linux-android
    - TARGET=arm-linux-androideabi
    - TARGET=i686-linux-android
    #- TEST_GOAL=coverage
    #- TEST_GOAL=performance

matrix:
  fast_finish: true

install:
  # Move files from cache directory.
  - rm -rf $HOME/.m2 $HOME/.ivy2 $HOME/.sbt
  - mkdir -p $HOME/cache/m2 $HOME/cache/ivy2 $HOME/cache/sbt
  - ln -s $HOME/cache/m2   $HOME/.m2
  - ln -s $HOME/cache/ivy2 $HOME/.ivy2
  - ln -s $HOME/cache/sbt  $HOME/.sbt
  # Set-up step.
  - export NDK_HOME=$HOME/android-ndk
  - buildscripts/00_dependencies_host
  - buildscripts/01_ndk
  - buildscripts/02_toolchain
  - buildscripts/03_dependencies_target

script:
  # Build/install step.
  - buildscripts/04_build || (cat projects/tox4j/config.log && false)
  - buildscripts/05_upload

before_cache:
  # Hack to make sbt-coveralls work with our non-standard directory layout.
  - ln -s $PWD/.git projects/tox4j/
  - ln -s $PWD/projects/tox4j/src/main/java/* $PWD/projects/tox4j/
  - if [ "$TEST_GOAL" = "coverage" -a -f "projects/tox4j/target/cobertura.xml" ]; then cd projects/tox4j && sbt coveralls; fi
  # Clean up cache.
  - find $HOME/cache/ivy2 -type f -name "ivydata-*.properties" -delete
  - find $HOME/cache/sbt/boot -name "sbt.*.lock" -delete

branches:
  only:
    - master
    - staging
